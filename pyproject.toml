[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "myshell-secure"
version = "2.0.0"
description = "A secure, cross-platform shell implementation in Python with built-in sanitization features"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "MyShell Project Contributors"}
]
maintainers = [
    {name = "MyShell Project Contributors"}
]
keywords = [
    "shell",
    "security",
    "command-line",
    "educational",
    "sanitization",
    "cross-platform"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Security",
    "Topic :: System :: Shells",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals"
]
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
windows = [
    "pyreadline3>=3.4.0; sys_platform=='win32'"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0"
]

[project.urls]
"Homepage" = "https://github.com/KernFerm/myshell-secure/tree/main"
"Documentation" = "https://github.com/KernFerm/myshell-secure/blob/main/README.md"
"Repository" = "https://github.com/KernFerm/myshell-secure"
"Bug Tracker" = "https://github.com/KernFerm/myshell-secureissues"
"Security" = "https://github.com/KernFerm/myshell-secure/blob/main/SECURITY.md"

[project.scripts]
myshell = "main:main"

[tool.setuptools]
py-modules = ["main", "test_shell"]

[tool.setuptools.packages.find]
where = ["."]
include = ["*.py"]

# Black code formatting configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy type checking configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--cov=main",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80"
]
markers = [
    "security: marks tests as security-related",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "test_*.py",
    "*_test.py",
    ".venv/*",
    "venv/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101"]  # Skip assert_used test

# Flake8 configuration (in setup.cfg format, as flake8 doesn't support pyproject.toml yet)
# Note: Create a separate .flake8 or setup.cfg file for flake8 configuration

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["main", "test_shell"]
